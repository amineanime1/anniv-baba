-- Enable Row Level Security
alter table public.products enable row level security;
alter table public.orders enable row level security;
alter table public.order_items enable row level security;
alter table public.delivery_fees enable row level security;

-- Create tables
create table public.products (
  id bigint generated by default as identity primary key,
  name text not null,
  description text,
  price integer not null,
  stock integer not null default 0,
  category text not null,
  images text[] not null default array[]::text[],
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.orders (
  id bigint generated by default as identity primary key,
  customer_name text not null,
  customer_email text not null,
  customer_phone text not null,
  wilaya text not null,
  address text not null,
  notes text,
  status text not null default 'pending',
  total_amount integer not null,
  delivery_fee integer not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.order_items (
  id bigint generated by default as identity primary key,
  order_id bigint references public.orders(id) on delete cascade not null,
  product_id bigint references public.products(id) on delete restrict not null,
  quantity integer not null,
  price_at_time integer not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

create table public.delivery_fees (
  id bigint generated by default as identity primary key,
  wilaya text unique not null,
  fee integer not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Create RLS policies
create policy "Products are viewable by everyone" on public.products
  for select using (true);

create policy "Orders are viewable by admin only" on public.orders
  for all using (auth.role() = 'authenticated');

create policy "Order items are viewable by admin only" on public.order_items
  for all using (auth.role() = 'authenticated');

create policy "Delivery fees are viewable by everyone" on public.delivery_fees
  for select using (true);